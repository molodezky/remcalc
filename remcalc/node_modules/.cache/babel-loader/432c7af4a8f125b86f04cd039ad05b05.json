{"ast":null,"code":"var _jsxFileName = \"D:\\\\WORK\\\\remcalc.pp.ua\\\\dev\\\\remcalc\\\\src\\\\components\\\\app\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Container, Row, Col, Button, Form, InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCopy } from \"@fortawesome/free-regular-svg-icons\";\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [defaultSize, setDefaultSize] = useState(props.defaultSize);\n  const [sizePx, setSizePx] = useState();\n  const [sizeRem, setSizeRem] = useState(1);\n  const [sizePreview, setSizePreview] = useState(props.defaultSize);\n  const [directCalc, setDirectCalc] = useState('rem');\n  useEffect(() => {\n    setSizePx(defaultSize);\n    document.title = 'Px to Rem / Rem to Px Converter';\n    document.description = 'Convert px to rem and rem to px';\n  }, []);\n  useEffect(() => {\n    console.log(directCalc);\n\n    if (directCalc === 'rem') {\n      setSizePx(sizeRem * defaultSize);\n      setSizePreview(sizePx + 'px');\n    }\n\n    if (directCalc === 'px') {\n      setSizeRem(sizePx / defaultSize);\n      setSizePreview(sizePx + 'px');\n    }\n  }, [sizeRem, sizePx, directCalc, defaultSize]);\n\n  const changeRem = event => {\n    setSizeRem(event.target.value);\n    setDirectCalc('rem');\n  };\n\n  const changePx = event => {\n    setSizePx(event.target.value);\n    setDirectCalc('px');\n  };\n\n  const copySizePx = async function () {\n    //navigator.clipboard.writeText(sizePx + 'px');\n    let promise = new Promise((resolve, reject) => {\n      setTimeout(() => resolve(\"готово!\"), 1000);\n    });\n    let result = await promise; // будет ждать, пока промис не выполнится (*)\n\n    alert(result); // \"готово!\"\n  }; //const copySizePx.then(console.log('yes'))\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Px to Rem / Rem to Px Converter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Preview:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"preview mb-3\",\n            style: {\n              fontSize: sizePreview\n            },\n            children: \"Lorem ipsum...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                children: \"REM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"text\",\n                autoComplete: \"off\",\n                name: \"inputRem\",\n                value: sizeRem,\n                onChange: changeRem\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"info\",\n                onClick: () => {\n                  navigator.clipboard.writeText(sizeRem + 'rem');\n                },\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCopy\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 105\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                children: \"PX\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"text\",\n                autoComplete: \"off\",\n                name: \"inputPx\",\n                value: sizePx,\n                onChange: changePx\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"info\",\n                onClick: copySizePx,\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCopy\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 61\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                children: \"1rem =\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                autoComplete: \"off\",\n                value: defaultSize,\n                onChange: event => setDefaultSize(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-info\",\n                size: \"sm\",\n                onClick: () => setDefaultSize(props.defaultSize),\n                children: \"Default Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [\"2022 \\xA9 Copyright \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://molodezky.pp.ua\",\n        target: \"new\",\n        children: \"Yevhen Molodetskyi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"j7f7GlypJCmgY6syQQSdBnKpDTY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/WORK/remcalc.pp.ua/dev/remcalc/src/components/app/App.js"],"names":["useEffect","useState","Container","Row","Col","Button","Form","InputGroup","FormControl","FontAwesomeIcon","faCopy","App","props","defaultSize","setDefaultSize","sizePx","setSizePx","sizeRem","setSizeRem","sizePreview","setSizePreview","directCalc","setDirectCalc","document","title","description","console","log","changeRem","event","target","value","changePx","copySizePx","promise","Promise","resolve","reject","setTimeout","result","alert","fontSize","navigator","clipboard","writeText"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\nimport { Container, Row, Col, Button, Form, InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCopy } from \"@fortawesome/free-regular-svg-icons\";\n\nimport './App.scss';\n\nconst App = (props) => {\n\n  const [defaultSize, setDefaultSize] = useState(props.defaultSize);\n  const [sizePx, setSizePx] = useState();\n  const [sizeRem, setSizeRem] = useState(1);\n  const [sizePreview, setSizePreview] = useState(props.defaultSize);\n  const [directCalc, setDirectCalc] = useState('rem');\n\n  useEffect(() => {\n    setSizePx(defaultSize);\n    document.title = 'Px to Rem / Rem to Px Converter';\n    document.description = 'Convert px to rem and rem to px'; \n  }, [])\n\n  useEffect(() => {\n    console.log(directCalc);    \n     if ( directCalc === 'rem' ) {\n       setSizePx(sizeRem * defaultSize);\n       setSizePreview(sizePx + 'px');\n     }\n     if ( directCalc === 'px' ) {\n       setSizeRem(sizePx / defaultSize);\n       setSizePreview(sizePx + 'px');\n     }\n\n  }, [sizeRem, sizePx, directCalc, defaultSize])\n\n  const changeRem = (event) => {\n    setSizeRem(event.target.value);\n    setDirectCalc('rem');\n  }\n\n  const changePx = (event) => {\n    setSizePx(event.target.value);\n    setDirectCalc('px');\n  }\n\n  const copySizePx = async function() {\n    //navigator.clipboard.writeText(sizePx + 'px');\n    \n    let promise = new Promise((resolve, reject) => {\n      setTimeout(() => resolve(\"готово!\"), 1000)\n    });\n  \n    let result = await promise; // будет ждать, пока промис не выполнится (*)\n  \n    alert(result); // \"готово!\"\n\n  }\n\n  //const copySizePx.then(console.log('yes'))\n\n  return (\n    <>\n      <header><h1>Px to Rem / Rem to Px Converter</h1></header>\n      <Container>\n      <Row>\n        <Col md={6}>\n          <h2>Preview:</h2>\n          <p className=\"preview mb-3\" style={{fontSize: sizePreview}}>\n            Lorem ipsum...\n          </p>\n        </Col>\n        <Col md={6}>\n          <Form>\n\n            <InputGroup className=\"mb-3\">\n              <InputGroup.Text>REM</InputGroup.Text>\n              <FormControl \n                type=\"text\"\n                autoComplete=\"off\"\n                name=\"inputRem\"\n                value={sizeRem}\n                onChange={changeRem} />\n                <Button variant=\"info\" onClick={() => {navigator.clipboard.writeText(sizeRem + 'rem')}}><FontAwesomeIcon icon={faCopy} /></Button>\n            </InputGroup>\n\n            <InputGroup className=\"mb-3\">\n              <InputGroup.Text>PX</InputGroup.Text>\n              <FormControl \n                type=\"text\"\n                autoComplete=\"off\"\n                name=\"inputPx\"\n                value={sizePx}\n                onChange={changePx} />\n                <Button variant=\"info\" onClick={copySizePx}><FontAwesomeIcon icon={faCopy} /></Button>\n            </InputGroup>\n\n            <InputGroup className=\"mb-3\">\n              <InputGroup.Text>1rem =</InputGroup.Text>\n              <Form.Control \n                type=\"text\"\n                autoComplete=\"off\"\n                value={defaultSize}\n                onChange={event => setDefaultSize(event.target.value)} />\n                <Button variant=\"outline-info\" size=\"sm\" onClick={() => setDefaultSize(props.defaultSize)}>Default Size</Button>\n            </InputGroup>\n\n          </Form>        \n        </Col>\n      </Row>\n      </Container>\n      <footer>\n        2022 &copy; Copyright <a href=\"https://molodezky.pp.ua\" target=\"new\">Yevhen Molodetskyi</a>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}